name: on release creation test and upload to PyPI

on:
  release:
    types: [created]


jobs:

  lint-check:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --ignore=C901 --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --ignore=C901 --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-dj3:
    needs: lint-check
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "django" "file-read-backwards>=2.0.0" "uwsgidecorators-fallback>=0.0.3" "uwsgidecorators>=1.1.0"
    - name: Test with pytest
      run: |
        export PYTHONPATH='.':$PYTHONPATH
        make test

  test-dj2:
    needs: lint-check
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "django<3" "file-read-backwards>=2.0.0" "uwsgidecorators-fallback>=0.0.3" "uwsgidecorators>=1.1.0"
    - name: Test with pytest
      run: |
        export PYTHONPATH='.':$PYTHONPATH
        make test

  deploy:
    needs: [test-dj2, test-dj3]
    name: Build and publish distributions to PyPI
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build distribution
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
